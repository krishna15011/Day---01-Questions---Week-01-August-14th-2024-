 Ques 1: Define a car class with properties brand name , model, engine, number of seats and method displayInfo that display the all information of class.

#include <iostream>
#include <string>

class Car {
private:
    std::string brandName;
    std::string model;
    std::string engine;
    int numberOfSeats;

public:
    Car(const std::string& brand, const std::string& mdl, const std::string& eng, int seats)
        : brandName(brand), model(mdl), engine(eng), numberOfSeats(seats) {}

    void displayInfo() const {
        std::cout << "Brand Name: " << brandName << std::endl;
        std::cout << "Model: " << model << std::endl;
        std::cout << "Engine: " << engine << std::endl;
        std::cout << "Number of Seats: " << numberOfSeats << std::endl;
    }
};

int main() {
    Car myCar("Toyota", "Camry", "V6", 5);

    myCar.displayInfo();

    return 0;
}
-------------------------------------------------------------------------------------------------
Ques 2: Write a program that defines a Rectangle class with a copy constructor

#include <iostream>

class Rectangle {
private:
    double width;
    double height;

public:
    Rectangle() : width(0), height(0) {}

    Rectangle(double w, double h) : width(w), height(h) {}

    Rectangle(const Rectangle &other) : width(other.width), height(other.height) {
        std::cout << "Copy constructor called!" << std::endl;
    }

    void setDimensions(double w, double h) {
        width = w;
        height = h;
    }

    void displayInfo() const {
        std::cout << "Width: " << width << ", Height: " << height << std::endl;
    }
};

int main() {
    Rectangle rect1(10.5, 20.3);
    
    std::cout << "Rectangle 1:" << std::endl;
    rect1.displayInfo();

    Rectangle rect2(rect1);

    std::cout << "Rectangle 2 (copied from Rectangle 1):" << std::endl;
    rect2.displayInfo();

    return 0;
}
